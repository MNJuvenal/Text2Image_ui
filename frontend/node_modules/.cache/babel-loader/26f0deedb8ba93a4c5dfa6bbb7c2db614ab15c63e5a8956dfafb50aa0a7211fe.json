{"ast":null,"code":"var _jsxFileName = \"/home/juve/Projet_perso/text2image/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport styled, { createGlobalStyle } from 'styled-components';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst GlobalStyle = createGlobalStyle`\n  * {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n  }\n\n  body {\n    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n    min-height: 100vh;\n  }\n`;\n_c = GlobalStyle;\nconst Container = styled.div`\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 20px;\n`;\n_c2 = Container;\nconst Title = styled.h1`\n  color: white;\n  text-align: center;\n  margin-bottom: 30px;\n  font-size: 2.5rem;\n  text-shadow: 2px 2px 4px rgba(0,0,0,0.3);\n`;\n_c3 = Title;\nconst Card = styled.div`\n  background: white;\n  border-radius: 15px;\n  padding: 30px;\n  box-shadow: 0 10px 30px rgba(0,0,0,0.2);\n  max-width: 800px;\n  width: 100%;\n  margin-bottom: 20px;\n`;\n_c4 = Card;\nconst InputGroup = styled.div`\n  margin-bottom: 20px;\n`;\n_c5 = InputGroup;\nconst Label = styled.label`\n  display: block;\n  margin-bottom: 8px;\n  font-weight: 600;\n  color: #333;\n`;\n_c6 = Label;\nconst TextArea = styled.textarea`\n  width: 100%;\n  min-height: 100px;\n  padding: 12px;\n  border: 2px solid #e1e5e9;\n  border-radius: 8px;\n  font-size: 16px;\n  resize: vertical;\n  transition: border-color 0.3s;\n\n  &:focus {\n    outline: none;\n    border-color: #667eea;\n  }\n`;\n_c7 = TextArea;\nconst ControlsRow = styled.div`\n  display: flex;\n  gap: 20px;\n  margin-bottom: 20px;\n  flex-wrap: wrap;\n`;\n_c8 = ControlsRow;\nconst ControlGroup = styled.div`\n  flex: 1;\n  min-width: 150px;\n`;\n_c9 = ControlGroup;\nconst Input = styled.input`\n  width: 100%;\n  padding: 10px;\n  border: 2px solid #e1e5e9;\n  border-radius: 8px;\n  font-size: 14px;\n  transition: border-color 0.3s;\n\n  &:focus {\n    outline: none;\n    border-color: #667eea;\n  }\n`;\n_c0 = Input;\nconst Button = styled.button`\n  background: linear-gradient(135deg, #667eea, #764ba2);\n  color: white;\n  border: none;\n  padding: 15px 30px;\n  border-radius: 8px;\n  font-size: 16px;\n  font-weight: 600;\n  cursor: pointer;\n  transition: transform 0.2s, box-shadow 0.2s;\n  width: 100%;\n\n  &:hover:not(:disabled) {\n    transform: translateY(-2px);\n    box-shadow: 0 5px 15px rgba(0,0,0,0.2);\n  }\n\n  &:disabled {\n    opacity: 0.6;\n    cursor: not-allowed;\n  }\n`;\n_c1 = Button;\nconst StatusCard = styled.div`\n  background: ${props => {\n  switch (props.status) {\n    case 'processing':\n      return '#fff3cd';\n    case 'completed':\n      return '#d4edda';\n    case 'error':\n      return '#f8d7da';\n    default:\n      return '#d1ecf1';\n  }\n}};\n  border: 1px solid ${props => {\n  switch (props.status) {\n    case 'processing':\n      return '#ffeaa7';\n    case 'completed':\n      return '#c3e6cb';\n    case 'error':\n      return '#f5c6cb';\n    default:\n      return '#bee5eb';\n  }\n}};\n  border-radius: 8px;\n  padding: 15px;\n  margin-bottom: 20px;\n`;\n_c10 = StatusCard;\nconst ImageContainer = styled.div`\n  text-align: center;\n  margin-top: 20px;\n`;\n_c11 = ImageContainer;\nconst GeneratedImage = styled.img`\n  max-width: 100%;\n  height: auto;\n  border-radius: 8px;\n  box-shadow: 0 5px 15px rgba(0,0,0,0.2);\n  margin-bottom: 15px;\n`;\n_c12 = GeneratedImage;\nconst DownloadButton = styled(Button)`\n  width: auto;\n  margin: 0 10px;\n`;\n_c13 = DownloadButton;\nconst LoadingSpinner = styled.div`\n  border: 3px solid #f3f3f3;\n  border-top: 3px solid #667eea;\n  border-radius: 50%;\n  width: 40px;\n  height: 40px;\n  animation: spin 1s linear infinite;\n  margin: 20px auto;\n\n  @keyframes spin {\n    0% { transform: rotate(0deg); }\n    100% { transform: rotate(360deg); }\n  }\n`;\n_c14 = LoadingSpinner;\nconst ExamplePrompts = styled.div`\n  margin-top: 15px;\n`;\n_c15 = ExamplePrompts;\nconst ExampleButton = styled.button`\n  background: #f8f9fa;\n  border: 1px solid #dee2e6;\n  border-radius: 20px;\n  padding: 8px 15px;\n  margin: 5px;\n  cursor: pointer;\n  font-size: 14px;\n  transition: all 0.2s;\n\n  &:hover {\n    background: #e9ecef;\n    border-color: #667eea;\n  }\n`;\n_c16 = ExampleButton;\nconst HelpSection = styled.div`\n  background: #f8f9fa;\n  border-radius: 8px;\n  padding: 15px;\n  margin-bottom: 20px;\n  font-size: 14px;\n  color: #6c757d;\n`;\nconst HelpTitle = styled.h4`\n  margin: 0 0 10px 0;\n  color: #495057;\n  font-size: 16px;\n`;\nconst HelpList = styled.ul`\n  margin: 0;\n  padding-left: 20px;\n`;\nfunction App() {\n  _s();\n  const [prompt, setPrompt] = useState('');\n  const [steps, setSteps] = useState(4);\n  const [guidanceScale, setGuidanceScale] = useState(0.0);\n  const [isGenerating, setIsGenerating] = useState(false);\n  const [currentTask, setCurrentTask] = useState(null);\n  const [generatedImage, setGeneratedImage] = useState(null);\n  const imageRef = useRef(null);\n  const examplePrompts = [\"un chat mignon qui joue avec une pelote de laine, style réaliste\", \"un paysage de montagne au coucher du soleil, style artistique\", \"un robot futuriste dans une ville cyberpunk\", \"une forêt enchantée avec des créatures magiques\", \"un portrait d'une personne souriante, style photographique\"];\n  const handleGenerate = async () => {\n    if (!prompt.trim()) {\n      alert('Veuillez entrer une description d\\'image');\n      return;\n    }\n    setIsGenerating(true);\n    setCurrentTask(null);\n    setGeneratedImage(null);\n    try {\n      const response = await axios.post('/api/generate', {\n        prompt: prompt.trim(),\n        steps: parseInt(steps),\n        guidance_scale: parseFloat(guidanceScale)\n      });\n      const {\n        taskId,\n        status,\n        imageUrl\n      } = response.data;\n      if (status === 'completed' && imageUrl) {\n        // Image générée immédiatement\n        setGeneratedImage(imageUrl);\n        setCurrentTask({\n          status: 'completed',\n          taskId\n        });\n      } else {\n        // Mode asynchrone (traitement local)\n        setCurrentTask({\n          status,\n          taskId\n        });\n        pollTaskStatus(taskId);\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Erreur génération:', error);\n      setCurrentTask({\n        status: 'error',\n        error: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Erreur de génération'\n      });\n    } finally {\n      setIsGenerating(false);\n    }\n  };\n  const pollTaskStatus = async taskId => {\n    const maxAttempts = 60; // 5 minutes max\n    let attempts = 0;\n    const poll = async () => {\n      try {\n        const response = await axios.get(`/api/status/${taskId}`);\n        const task = response.data;\n        setCurrentTask(task);\n        if (task.status === 'completed') {\n          if (task.imageUrl) {\n            setGeneratedImage(task.imageUrl);\n          }\n          return;\n        } else if (task.status === 'error') {\n          return;\n        } else if (attempts < maxAttempts) {\n          attempts++;\n          setTimeout(poll, 5000); // Poll toutes les 5 secondes\n        } else {\n          setCurrentTask({\n            status: 'error',\n            error: 'Timeout - génération trop longue'\n          });\n        }\n      } catch (error) {\n        console.error('Erreur polling:', error);\n        setCurrentTask({\n          status: 'error',\n          error: 'Erreur de communication avec le serveur'\n        });\n      }\n    };\n    poll();\n  };\n  const handleDownload = () => {\n    if (generatedImage) {\n      const link = document.createElement('a');\n      link.href = generatedImage;\n      link.download = `generated-image-${Date.now()}.png`;\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    }\n  };\n  const handleExampleClick = examplePrompt => {\n    setPrompt(examplePrompt);\n  };\n  const getStatusMessage = () => {\n    if (!currentTask) return null;\n    switch (currentTask.status) {\n      case 'pending':\n        return 'Tâche en attente...';\n      case 'processing':\n        return 'Génération de l\\'image en cours...';\n      case 'completed':\n        return 'Image générée avec succès !';\n      case 'error':\n        return `Erreur: ${currentTask.error}`;\n      default:\n        return 'Statut inconnu';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(GlobalStyle, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        children: \"\\uD83C\\uDFA8 G\\xE9n\\xE9rateur d'Images IA\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(InputGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            htmlFor: \"prompt\",\n            children: \"Description de l'image :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextArea, {\n            id: \"prompt\",\n            value: prompt,\n            onChange: e => setPrompt(e.target.value),\n            placeholder: \"D\\xE9crivez l'image que vous souhaitez g\\xE9n\\xE9rer...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ExamplePrompts, {\n            children: [/*#__PURE__*/_jsxDEV(\"small\", {\n              children: \"Exemples :\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: examplePrompts.map((example, index) => /*#__PURE__*/_jsxDEV(ExampleButton, {\n                onClick: () => handleExampleClick(example),\n                children: example\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 363,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ControlsRow, {\n          children: [/*#__PURE__*/_jsxDEV(ControlGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              htmlFor: \"steps\",\n              children: [\"\\xC9tapes (1-4) :\", /*#__PURE__*/_jsxDEV(\"span\", {\n                title: \"Nombre d'\\xE9tapes de d\\xE9bruitage. 1=ultra-rapide, 4=meilleure qualit\\xE9 (recommand\\xE9)\",\n                children: \"\\u2139\\uFE0F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 378,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              id: \"steps\",\n              type: \"number\",\n              min: \"1\",\n              max: \"4\",\n              value: steps,\n              onChange: e => setSteps(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 380,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ControlGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              htmlFor: \"guidance\",\n              children: [\"Guidance Scale :\", /*#__PURE__*/_jsxDEV(\"span\", {\n                title: \"Fid\\xE9lit\\xE9 au prompt. 0.0=recommand\\xE9 pour SD-Turbo, >1.0=risque de d\\xE9gradation\",\n                children: \"\\u2139\\uFE0F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 393,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 391,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              id: \"guidance\",\n              type: \"number\",\n              min: \"0\",\n              max: \"2\",\n              step: \"0.1\",\n              value: guidanceScale,\n              onChange: e => setGuidanceScale(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 395,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleGenerate,\n          disabled: isGenerating || !prompt.trim(),\n          children: isGenerating ? 'Génération en cours...' : 'Générer l\\'image'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 9\n      }, this), currentTask && /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(StatusCard, {\n          status: currentTask.status,\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Statut :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 15\n          }, this), \" \", getStatusMessage(), currentTask.status === 'processing' && /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 419,\n            columnNumber: 55\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 11\n      }, this), generatedImage && /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(ImageContainer, {\n          children: [/*#__PURE__*/_jsxDEV(GeneratedImage, {\n            ref: imageRef,\n            src: generatedImage,\n            alt: \"Image g\\xE9n\\xE9r\\xE9e\",\n            onError: e => {\n              console.error('Erreur chargement image:', e);\n              e.target.style.display = 'none';\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 427,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(DownloadButton, {\n              onClick: handleDownload,\n              children: \"\\uD83D\\uDCE5 T\\xE9l\\xE9charger\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 437,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 436,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"PPwOwvnjJCgDmJR8bAVgbIjUwsM=\");\n_c17 = App;\nexport default App;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c0, _c1, _c10, _c11, _c12, _c13, _c14, _c15, _c16, _c17;\n$RefreshReg$(_c, \"GlobalStyle\");\n$RefreshReg$(_c2, \"Container\");\n$RefreshReg$(_c3, \"Title\");\n$RefreshReg$(_c4, \"Card\");\n$RefreshReg$(_c5, \"InputGroup\");\n$RefreshReg$(_c6, \"Label\");\n$RefreshReg$(_c7, \"TextArea\");\n$RefreshReg$(_c8, \"ControlsRow\");\n$RefreshReg$(_c9, \"ControlGroup\");\n$RefreshReg$(_c0, \"Input\");\n$RefreshReg$(_c1, \"Button\");\n$RefreshReg$(_c10, \"StatusCard\");\n$RefreshReg$(_c11, \"ImageContainer\");\n$RefreshReg$(_c12, \"GeneratedImage\");\n$RefreshReg$(_c13, \"DownloadButton\");\n$RefreshReg$(_c14, \"LoadingSpinner\");\n$RefreshReg$(_c15, \"ExamplePrompts\");\n$RefreshReg$(_c16, \"ExampleButton\");\n$RefreshReg$(_c17, \"App\");","map":{"version":3,"names":["React","useState","useRef","styled","createGlobalStyle","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","GlobalStyle","_c","Container","div","_c2","Title","h1","_c3","Card","_c4","InputGroup","_c5","Label","label","_c6","TextArea","textarea","_c7","ControlsRow","_c8","ControlGroup","_c9","Input","input","_c0","Button","button","_c1","StatusCard","props","status","_c10","ImageContainer","_c11","GeneratedImage","img","_c12","DownloadButton","_c13","LoadingSpinner","_c14","ExamplePrompts","_c15","ExampleButton","_c16","HelpSection","HelpTitle","h4","HelpList","ul","App","_s","prompt","setPrompt","steps","setSteps","guidanceScale","setGuidanceScale","isGenerating","setIsGenerating","currentTask","setCurrentTask","generatedImage","setGeneratedImage","imageRef","examplePrompts","handleGenerate","trim","alert","response","post","parseInt","guidance_scale","parseFloat","taskId","imageUrl","data","pollTaskStatus","error","_error$response","_error$response$data","console","maxAttempts","attempts","poll","get","task","setTimeout","handleDownload","link","document","createElement","href","download","Date","now","body","appendChild","click","removeChild","handleExampleClick","examplePrompt","getStatusMessage","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","value","onChange","e","target","placeholder","map","example","index","onClick","title","type","min","max","step","disabled","ref","src","alt","onError","style","display","_c17","$RefreshReg$"],"sources":["/home/juve/Projet_perso/text2image/frontend/src/App.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport styled, { createGlobalStyle } from 'styled-components';\nimport axios from 'axios';\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n  }\n\n  body {\n    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n    min-height: 100vh;\n  }\n`;\n\nconst Container = styled.div`\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 20px;\n`;\n\nconst Title = styled.h1`\n  color: white;\n  text-align: center;\n  margin-bottom: 30px;\n  font-size: 2.5rem;\n  text-shadow: 2px 2px 4px rgba(0,0,0,0.3);\n`;\n\nconst Card = styled.div`\n  background: white;\n  border-radius: 15px;\n  padding: 30px;\n  box-shadow: 0 10px 30px rgba(0,0,0,0.2);\n  max-width: 800px;\n  width: 100%;\n  margin-bottom: 20px;\n`;\n\nconst InputGroup = styled.div`\n  margin-bottom: 20px;\n`;\n\nconst Label = styled.label`\n  display: block;\n  margin-bottom: 8px;\n  font-weight: 600;\n  color: #333;\n`;\n\nconst TextArea = styled.textarea`\n  width: 100%;\n  min-height: 100px;\n  padding: 12px;\n  border: 2px solid #e1e5e9;\n  border-radius: 8px;\n  font-size: 16px;\n  resize: vertical;\n  transition: border-color 0.3s;\n\n  &:focus {\n    outline: none;\n    border-color: #667eea;\n  }\n`;\n\nconst ControlsRow = styled.div`\n  display: flex;\n  gap: 20px;\n  margin-bottom: 20px;\n  flex-wrap: wrap;\n`;\n\nconst ControlGroup = styled.div`\n  flex: 1;\n  min-width: 150px;\n`;\n\nconst Input = styled.input`\n  width: 100%;\n  padding: 10px;\n  border: 2px solid #e1e5e9;\n  border-radius: 8px;\n  font-size: 14px;\n  transition: border-color 0.3s;\n\n  &:focus {\n    outline: none;\n    border-color: #667eea;\n  }\n`;\n\nconst Button = styled.button`\n  background: linear-gradient(135deg, #667eea, #764ba2);\n  color: white;\n  border: none;\n  padding: 15px 30px;\n  border-radius: 8px;\n  font-size: 16px;\n  font-weight: 600;\n  cursor: pointer;\n  transition: transform 0.2s, box-shadow 0.2s;\n  width: 100%;\n\n  &:hover:not(:disabled) {\n    transform: translateY(-2px);\n    box-shadow: 0 5px 15px rgba(0,0,0,0.2);\n  }\n\n  &:disabled {\n    opacity: 0.6;\n    cursor: not-allowed;\n  }\n`;\n\nconst StatusCard = styled.div`\n  background: ${props => {\n    switch(props.status) {\n      case 'processing': return '#fff3cd';\n      case 'completed': return '#d4edda';\n      case 'error': return '#f8d7da';\n      default: return '#d1ecf1';\n    }\n  }};\n  border: 1px solid ${props => {\n    switch(props.status) {\n      case 'processing': return '#ffeaa7';\n      case 'completed': return '#c3e6cb';\n      case 'error': return '#f5c6cb';\n      default: return '#bee5eb';\n    }\n  }};\n  border-radius: 8px;\n  padding: 15px;\n  margin-bottom: 20px;\n`;\n\nconst ImageContainer = styled.div`\n  text-align: center;\n  margin-top: 20px;\n`;\n\nconst GeneratedImage = styled.img`\n  max-width: 100%;\n  height: auto;\n  border-radius: 8px;\n  box-shadow: 0 5px 15px rgba(0,0,0,0.2);\n  margin-bottom: 15px;\n`;\n\nconst DownloadButton = styled(Button)`\n  width: auto;\n  margin: 0 10px;\n`;\n\nconst LoadingSpinner = styled.div`\n  border: 3px solid #f3f3f3;\n  border-top: 3px solid #667eea;\n  border-radius: 50%;\n  width: 40px;\n  height: 40px;\n  animation: spin 1s linear infinite;\n  margin: 20px auto;\n\n  @keyframes spin {\n    0% { transform: rotate(0deg); }\n    100% { transform: rotate(360deg); }\n  }\n`;\n\nconst ExamplePrompts = styled.div`\n  margin-top: 15px;\n`;\n\nconst ExampleButton = styled.button`\n  background: #f8f9fa;\n  border: 1px solid #dee2e6;\n  border-radius: 20px;\n  padding: 8px 15px;\n  margin: 5px;\n  cursor: pointer;\n  font-size: 14px;\n  transition: all 0.2s;\n\n  &:hover {\n    background: #e9ecef;\n    border-color: #667eea;\n  }\n`;\n\nconst HelpSection = styled.div`\n  background: #f8f9fa;\n  border-radius: 8px;\n  padding: 15px;\n  margin-bottom: 20px;\n  font-size: 14px;\n  color: #6c757d;\n`;\n\nconst HelpTitle = styled.h4`\n  margin: 0 0 10px 0;\n  color: #495057;\n  font-size: 16px;\n`;\n\nconst HelpList = styled.ul`\n  margin: 0;\n  padding-left: 20px;\n`;\n\nfunction App() {\n  const [prompt, setPrompt] = useState('');\n  const [steps, setSteps] = useState(4);\n  const [guidanceScale, setGuidanceScale] = useState(0.0);\n  const [isGenerating, setIsGenerating] = useState(false);\n  const [currentTask, setCurrentTask] = useState(null);\n  const [generatedImage, setGeneratedImage] = useState(null);\n  const imageRef = useRef(null);\n\n  const examplePrompts = [\n    \"un chat mignon qui joue avec une pelote de laine, style réaliste\",\n    \"un paysage de montagne au coucher du soleil, style artistique\",\n    \"un robot futuriste dans une ville cyberpunk\",\n    \"une forêt enchantée avec des créatures magiques\",\n    \"un portrait d'une personne souriante, style photographique\"\n  ];\n\n  const handleGenerate = async () => {\n    if (!prompt.trim()) {\n      alert('Veuillez entrer une description d\\'image');\n      return;\n    }\n\n    setIsGenerating(true);\n    setCurrentTask(null);\n    setGeneratedImage(null);\n\n    try {\n      const response = await axios.post('/api/generate', {\n        prompt: prompt.trim(),\n        steps: parseInt(steps),\n        guidance_scale: parseFloat(guidanceScale)\n      });\n\n      const { taskId, status, imageUrl } = response.data;\n      \n      if (status === 'completed' && imageUrl) {\n        // Image générée immédiatement\n        setGeneratedImage(imageUrl);\n        setCurrentTask({ status: 'completed', taskId });\n      } else {\n        // Mode asynchrone (traitement local)\n        setCurrentTask({ status, taskId });\n        pollTaskStatus(taskId);\n      }\n    } catch (error) {\n      console.error('Erreur génération:', error);\n      setCurrentTask({\n        status: 'error',\n        error: error.response?.data?.error || 'Erreur de génération'\n      });\n    } finally {\n      setIsGenerating(false);\n    }\n  };\n\n  const pollTaskStatus = async (taskId) => {\n    const maxAttempts = 60; // 5 minutes max\n    let attempts = 0;\n\n    const poll = async () => {\n      try {\n        const response = await axios.get(`/api/status/${taskId}`);\n        const task = response.data;\n        \n        setCurrentTask(task);\n\n        if (task.status === 'completed') {\n          if (task.imageUrl) {\n            setGeneratedImage(task.imageUrl);\n          }\n          return;\n        } else if (task.status === 'error') {\n          return;\n        } else if (attempts < maxAttempts) {\n          attempts++;\n          setTimeout(poll, 5000); // Poll toutes les 5 secondes\n        } else {\n          setCurrentTask({\n            status: 'error',\n            error: 'Timeout - génération trop longue'\n          });\n        }\n      } catch (error) {\n        console.error('Erreur polling:', error);\n        setCurrentTask({\n          status: 'error',\n          error: 'Erreur de communication avec le serveur'\n        });\n      }\n    };\n\n    poll();\n  };\n\n  const handleDownload = () => {\n    if (generatedImage) {\n      const link = document.createElement('a');\n      link.href = generatedImage;\n      link.download = `generated-image-${Date.now()}.png`;\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    }\n  };\n\n  const handleExampleClick = (examplePrompt) => {\n    setPrompt(examplePrompt);\n  };\n\n  const getStatusMessage = () => {\n    if (!currentTask) return null;\n\n    switch (currentTask.status) {\n      case 'pending':\n        return 'Tâche en attente...';\n      case 'processing':\n        return 'Génération de l\\'image en cours...';\n      case 'completed':\n        return 'Image générée avec succès !';\n      case 'error':\n        return `Erreur: ${currentTask.error}`;\n      default:\n        return 'Statut inconnu';\n    }\n  };\n\n  return (\n    <>\n      <GlobalStyle />\n      <Container>\n        <Title>🎨 Générateur d'Images IA</Title>\n        \n        <Card>\n          <InputGroup>\n            <Label htmlFor=\"prompt\">Description de l'image :</Label>\n            <TextArea\n              id=\"prompt\"\n              value={prompt}\n              onChange={(e) => setPrompt(e.target.value)}\n              placeholder=\"Décrivez l'image que vous souhaitez générer...\"\n            />\n            \n            <ExamplePrompts>\n              <small>Exemples :</small>\n              <div>\n                {examplePrompts.map((example, index) => (\n                  <ExampleButton\n                    key={index}\n                    onClick={() => handleExampleClick(example)}\n                  >\n                    {example}\n                  </ExampleButton>\n                ))}\n              </div>\n            </ExamplePrompts>\n          </InputGroup>\n\n          <ControlsRow>\n            <ControlGroup>\n              <Label htmlFor=\"steps\">\n                Étapes (1-4) :\n                <span title=\"Nombre d'étapes de débruitage. 1=ultra-rapide, 4=meilleure qualité (recommandé)\">ℹ️</span>\n              </Label>\n              <Input\n                id=\"steps\"\n                type=\"number\"\n                min=\"1\"\n                max=\"4\"\n                value={steps}\n                onChange={(e) => setSteps(e.target.value)}\n              />\n            </ControlGroup>\n            \n            <ControlGroup>\n              <Label htmlFor=\"guidance\">\n                Guidance Scale :\n                <span title=\"Fidélité au prompt. 0.0=recommandé pour SD-Turbo, >1.0=risque de dégradation\">ℹ️</span>\n              </Label>\n              <Input\n                id=\"guidance\"\n                type=\"number\"\n                min=\"0\"\n                max=\"2\"\n                step=\"0.1\"\n                value={guidanceScale}\n                onChange={(e) => setGuidanceScale(e.target.value)}\n              />\n            </ControlGroup>\n          </ControlsRow>\n\n          <Button \n            onClick={handleGenerate} \n            disabled={isGenerating || !prompt.trim()}\n          >\n            {isGenerating ? 'Génération en cours...' : 'Générer l\\'image'}\n          </Button>\n        </Card>\n\n        {currentTask && (\n          <Card>\n            <StatusCard status={currentTask.status}>\n              <strong>Statut :</strong> {getStatusMessage()}\n              {currentTask.status === 'processing' && <LoadingSpinner />}\n            </StatusCard>\n          </Card>\n        )}\n\n        {generatedImage && (\n          <Card>\n            <ImageContainer>\n              <GeneratedImage \n                ref={imageRef}\n                src={generatedImage} \n                alt=\"Image générée\"\n                onError={(e) => {\n                  console.error('Erreur chargement image:', e);\n                  e.target.style.display = 'none';\n                }}\n              />\n              <div>\n                <DownloadButton onClick={handleDownload}>\n                  📥 Télécharger\n                </DownloadButton>\n              </div>\n            </ImageContainer>\n          </Card>\n        )}\n      </Container>\n    </>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}